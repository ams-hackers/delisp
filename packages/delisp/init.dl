(define >>>
  (lambda (f1 f2)
    (lambda (x) (f2 (f1 x)))))

(define over
  (lambda (lens fn x)
    (multiple-value-bind (current change)
        (lens x)
      (change (fn current)))))

(define constantly
  (lambda (x) (lambda (y) x)))

(define set
  (lambda (lens value container)
    (over lens
          (constantly value)
          container)))

(define >>
  (lambda (outer inner)
    (lambda (container)
      (values (inner (outer container))
              (lambda (value
                       container)
                (set outer
                     (set inner
                          value
                          (outer container))
                     container))))))

(define test
  (multiple-value-bind (_ change)
      (:x {:x 10})
    change))